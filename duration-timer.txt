' Script name: DuratronTimer
' This script calculates the remaining time of the current input and
' updates this time in the Text input named "Text Middle Centre Outline.gtzip".
' If the current input has no duration, it will start counting up.
' Text input needs to be configured: Right click > Title Editor > Settings and
' - set Duration as "23:00:00"
' - select Display Format as "mm:ss"
' - turn on "Reverse"

Console.WriteLine("DurationTimer 1.0.2")

Dim textInputTitle = "Text Middle Centre Outline.gtzip"
Dim position As Double = 0
Dim duration As Double = 0
Dim yellowTime As Integer = 60
Dim redTime As Integer = 11

Dim xml as string = API.XML()
Dim x As new system.xml.xmldocument
x.loadxml(xml)
Dim textNode As XmlNode = x.SelectSingleNode("//input[@title='" & textInputTitle & "']")

If textNode Is Nothing Then
    Console.WriteLine("Error: Could not find a text input with title '" & textInputTitle & "'. Exiting...")
    Return
End If


Do While True
    Sleep(500)

    Try
        xml = API.XML()
        x.loadxml(xml)

        Dim activeInput As String = (x.SelectSingleNode("//active").InnerText)
        Dim durationNode As XmlNode = x.SelectSingleNode("//input[@number='" & activeInput & "']/@duration")
        duration = Double.Parse(durationNode.Value)

        Dim positionNode As XmlNode = x.SelectSingleNode("//input[@number='"& activeInput &"']/@position")
        position = Double.Parse(positionNode.Value)

        If duration = 0
            API.Function("SetTextColour", textInputTitle, "white")
            API.Function("StartCountdown", textInputTitle)
            continue do
        Else
            API.Function("StopCountdown", textInputTitle)
        End If

        Dim timeLeft As Integer = CInt((duration - position) / 100)
        timeLeft = timeLeft / 10

        Dim hour As Integer = timeLeft \ 3600
        Dim min As Integer = timeLeft \ 60
        Dim sec As Integer = timeLeft Mod 60

        Dim timeStr As String = sec.ToString()
        If hour > 0
            timeStr = hour.ToString() & ":" & min.ToString("00") & ":" & sec.ToString("00")
        ElseIf min > 0
            timeStr = min.ToString() & ":" & sec.ToString("00")
        End If
        API.Function("SetText", textInputTitle, timeStr)

        If timeLeft < redTime
            API.Function("SetTextColour", textInputTitle, "red")
        ElseIf timeLeft < yellowTime
            API.Function("SetTextColour", textInputTitle, "orange")
        Else
            API.Function("SetTextColour", textInputTitle, "green")
        End If
    Catch ex As Exception
        Console.WriteLine("Unexpected error: " & ex.Message)
    End Try
Loop
